//the following code was generated based on the following outcommented codeblock in order to avoid many if and use one switch instead.

////			if(((tmp_cl[i].ecken >> m111)&1) && (!((tmp_cl[i].ecken >> m110)&1))) {//kante m111(1)-m110(0)
////				tmp_cl[i].vn_id[pxpy]=vn_count;
////				Vektor relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
////				tmp_va[3 * vn_count    ] = relevante_ecke.x(); //x
////				tmp_va[3 * vn_count + 1] = relevante_ecke.y(); //y
////				tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count]; //z
////				
////				tmp_na[3 * vn_count    ] =
////					0.20000f*( ((tmp_cl[i].ecken & m010bit ) >> m010)+((tmp_cl[i].ecken & m011bit ) >> m011))
////						+0.11111f*( ((tmp_cl[i].ecken & m000bit ) >> m000)+((tmp_cl[i].ecken & m001bit ) >> m001)); //x
////				tmp_na[3 * vn_count + 1] =
////						 0.20000f*( ((tmp_cl[i].ecken & m100bit ) >> m100)+((tmp_cl[i].ecken & m101bit ) >> m101))
////						+0.11111f*( ((tmp_cl[i].ecken & m000bit ) >> m000)+((tmp_cl[i].ecken & m001bit ) >> m001)); //y
////				tmp_na[3 * vn_count + 2] =
////						 1.00000f*( (float)((tmp_cl[i].ecken & m110bit ) >> m110)-(float)((tmp_cl[i].ecken & m111bit ) >> m111))
////						+0.20000f*( (float)((tmp_cl[i].ecken & m100bit ) >> m100)-(float)((tmp_cl[i].ecken & m101bit ) >> m101)+
////									(float)((tmp_cl[i].ecken & m010bit ) >> m010)-(float)((tmp_cl[i].ecken & m011bit ) >> m011))
////						+0.11111f*( (float)((tmp_cl[i].ecken & m000bit ) >> m000)-(float)((tmp_cl[i].ecken & m001bit ) >> m001)); //z
////
////				vn_count++;
////			} else if((!((tmp_cl[i].ecken >> m111)&1)) && ((tmp_cl[i].ecken >> m110)&1)) {//kante m110(1)-m111(0)
////				tmp_cl[i].vn_id[pxpy]=vn_count;
////				Vektor relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
////				tmp_va[3 * vn_count    ] = relevante_ecke.x(); //x
////				tmp_va[3 * vn_count + 1] = relevante_ecke.y(); //y
////				tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count]; //z
////				
////				tmp_na[3 * vn_count    ] = 
////						 0.20000f*( ((tmp_cl[i].ecken & m010bit ) >> m010)+((tmp_cl[i].ecken & m011bit ) >> m011))
////						+0.11111f*( ((tmp_cl[i].ecken & m000bit ) >> m000)+((tmp_cl[i].ecken & m001bit ) >> m001)); //x
////				tmp_na[3 * vn_count + 1] =
////						 0.20000f*( ((tmp_cl[i].ecken & m100bit ) >> m100)+((tmp_cl[i].ecken & m101bit ) >> m101))
////						+0.11111f*( ((tmp_cl[i].ecken & m000bit ) >> m000)+((tmp_cl[i].ecken & m001bit ) >> m001)); //y
////				tmp_na[3 * vn_count + 2] = 
////						 1.00000f*( (float)((tmp_cl[i].ecken & m110bit ) >> m110)-(float)((tmp_cl[i].ecken & m111bit ) >> m111))
////						+0.20000f*( (float)((tmp_cl[i].ecken & m100bit ) >> m100)-(float)((tmp_cl[i].ecken & m101bit ) >> m101)+
////									(float)((tmp_cl[i].ecken & m010bit ) >> m010)-(float)((tmp_cl[i].ecken & m011bit ) >> m011))
////						+0.11111f*( (float)((tmp_cl[i].ecken & m000bit ) >> m000)-(float)((tmp_cl[i].ecken & m001bit ) >> m001)); //z
////
////				vn_count++;
////			}
////			if(((tmp_cl[i].ecken >> m111)&1) && (!((tmp_cl[i].ecken >> m101)&1))) {//kante m111(1)-m101(0)
////				tmp_cl[i].vn_id[pxpz]=vn_count;
////				Vektor relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
////				tmp_va[3 * vn_count    ] = relevante_ecke.x(); //x
////				tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count]; //y
////				tmp_va[3 * vn_count + 2] = relevante_ecke.z(); //z
////
////				tmp_na[3 * vn_count    ] = 
////						 0.20000f*( ((tmp_cl[i].ecken & m001bit ) >> m001)+((tmp_cl[i].ecken & m011bit ) >> m011))
////						+0.11111f*( ((tmp_cl[i].ecken & m000bit ) >> m000)+((tmp_cl[i].ecken & m010bit ) >> m010)); //x
////				tmp_na[3 * vn_count + 1] =
////						 1.00000f*( (float)((tmp_cl[i].ecken & m101bit ) >> m101)-(float)((tmp_cl[i].ecken & m111bit ) >> m111))
////						+0.20000f*( (float)((tmp_cl[i].ecken & m100bit ) >> m100)-(float)((tmp_cl[i].ecken & m110bit ) >> m110)+
////									(float)((tmp_cl[i].ecken & m001bit ) >> m001)-(float)((tmp_cl[i].ecken & m011bit ) >> m011))
////						+0.11111f*( (float)((tmp_cl[i].ecken & m000bit ) >> m000)-(float)((tmp_cl[i].ecken & m010bit ) >> m010)); //y
////				tmp_na[3 * vn_count + 2] = 
////						 0.20000f*( ((tmp_cl[i].ecken & m100bit ) >> m100)+((tmp_cl[i].ecken & m110bit ) >> m110))
////						+0.11111f*( ((tmp_cl[i].ecken & m000bit ) >> m000)+((tmp_cl[i].ecken & m010bit ) >> m010)); //z
////
////				vn_count++;
////			} else if((!((tmp_cl[i].ecken >> m111)&1)) && ((tmp_cl[i].ecken >> m101)&1)) {//kante m111(0)-m101(1)
////				tmp_cl[i].vn_id[pxpz]=vn_count;
////				Vektor relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
////				tmp_va[3 * vn_count    ] = relevante_ecke.x(); //x
////				tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count]; //y
////				tmp_va[3 * vn_count + 2] = relevante_ecke.z(); //z
////
////				tmp_na[3 * vn_count    ] = 
////						 0.20000f*( ((tmp_cl[i].ecken & m001bit ) >> m001)+((tmp_cl[i].ecken & m011bit ) >> m011))
////						+0.11111f*( ((tmp_cl[i].ecken & m000bit ) >> m000)+((tmp_cl[i].ecken & m010bit ) >> m010)); //x
////				tmp_na[3 * vn_count + 1] =
////						 1.00000f*( (float)((tmp_cl[i].ecken & m101bit ) >> m101)-(float)((tmp_cl[i].ecken & m111bit ) >> m111))
////						+0.20000f*( (float)((tmp_cl[i].ecken & m100bit ) >> m100)-(float)((tmp_cl[i].ecken & m110bit ) >> m110)+
////									(float)((tmp_cl[i].ecken & m001bit ) >> m001)-(float)((tmp_cl[i].ecken & m011bit ) >> m011))
////						+0.11111f*( (float)((tmp_cl[i].ecken & m000bit ) >> m000)-(float)((tmp_cl[i].ecken & m010bit ) >> m010)); //y
////				tmp_na[3 * vn_count + 2] = 
////						 0.20000f*( ((tmp_cl[i].ecken & m100bit ) >> m100)+((tmp_cl[i].ecken & m110bit ) >> m110))
////						+0.11111f*( ((tmp_cl[i].ecken & m000bit ) >> m000)+((tmp_cl[i].ecken & m010bit ) >> m010)); //z
////
////				vn_count++;
////			}
////			if(((tmp_cl[i].ecken >> m111)&1) && (!((tmp_cl[i].ecken >> m011)&1))) {//kante m111(1)-m011(0)
////				tmp_cl[i].vn_id[pypz]=vn_count;
////				Vektor relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
////				tmp_va[3 * vn_count    ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count]; //x
////				tmp_va[3 * vn_count + 1] = relevante_ecke.y(); //y
////				tmp_va[3 * vn_count + 2] = relevante_ecke.z(); //z
////
////				tmp_na[3 * vn_count    ] = 
////						 1.00000f*( (float)((tmp_cl[i].ecken & m011bit ) >> m011)-(float)((tmp_cl[i].ecken & m111bit ) >> m111))
////						+0.20000f*( (float)((tmp_cl[i].ecken & m001bit ) >> m001)-(float)((tmp_cl[i].ecken & m101bit ) >> m101)+
////									(float)((tmp_cl[i].ecken & m010bit ) >> m010)-(float)((tmp_cl[i].ecken & m110bit ) >> m110))
////						+0.11111f*( (float)((tmp_cl[i].ecken & m000bit ) >> m000)-(float)((tmp_cl[i].ecken & m100bit ) >> m100)); //x
////				tmp_na[3 * vn_count + 1] =
////						 0.20000f*( ((tmp_cl[i].ecken & m001bit ) >> m001)+((tmp_cl[i].ecken & m101bit ) >> m101))
////						+0.11111f*( ((tmp_cl[i].ecken & m000bit ) >> m000)+((tmp_cl[i].ecken & m100bit ) >> m100)); //y
////				tmp_na[3 * vn_count + 2] = 
////						 0.20000f*( ((tmp_cl[i].ecken & m010bit ) >> m010)+((tmp_cl[i].ecken & m110bit ) >> m110))
////						+0.11111f*( ((tmp_cl[i].ecken & m000bit ) >> m000)+((tmp_cl[i].ecken & m100bit ) >> m100)); //z
////
////				vn_count++;
////			} else if((!((tmp_cl[i].ecken >> m111)&1)) && ((tmp_cl[i].ecken >> m011)&1)) {//kante m111(0)-m011(1)
////				tmp_cl[i].vn_id[pypz]=vn_count;
////				Vektor relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
////				tmp_va[3 * vn_count    ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count]; //x
////				tmp_va[3 * vn_count + 1] = relevante_ecke.y(); //y
////				tmp_va[3 * vn_count + 2] = relevante_ecke.z(); //z
////
////				tmp_na[3 * vn_count    ] = 
////						 1.00000f*( (float)((tmp_cl[i].ecken & m011bit ) >> m011)-(float)((tmp_cl[i].ecken & m111bit ) >> m111))
////						+0.20000f*( (float)((tmp_cl[i].ecken & m001bit ) >> m001)-(float)((tmp_cl[i].ecken & m101bit ) >> m101)+
////									(float)((tmp_cl[i].ecken & m010bit ) >> m010)-(float)((tmp_cl[i].ecken & m110bit ) >> m110))
////						+0.11111f*( (float)((tmp_cl[i].ecken & m000bit ) >> m000)-(float)((tmp_cl[i].ecken & m100bit ) >> m100)); //x
////				tmp_na[3 * vn_count + 1] =
////						 0.20000f*( ((tmp_cl[i].ecken & m001bit ) >> m001)+((tmp_cl[i].ecken & m101bit ) >> m101))
////						+0.11111f*( ((tmp_cl[i].ecken & m000bit ) >> m000)+((tmp_cl[i].ecken & m100bit ) >> m100)); //y
////				tmp_na[3 * vn_count + 2] = 
////						 0.20000f*( ((tmp_cl[i].ecken & m010bit ) >> m010)+((tmp_cl[i].ecken & m110bit ) >> m110))
////						+0.11111f*( ((tmp_cl[i].ecken & m000bit ) >> m000)+((tmp_cl[i].ecken & m100bit ) >> m100)); //z
////
////				vn_count++;
////			}



Vektor relevante_ecke;
switch (tmp_cl[i].ecken) {
case 0:
break;
case 1:
break;
case 2:
break;
case 3:
break;
case 4:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.000000f;
tmp_na[3 * vn_count + 1] = 0.000000f;
tmp_na[3 * vn_count + 2] = 1.000000f;
vn_count++;
break;
case 5:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.111110f;
tmp_na[3 * vn_count + 1] = 0.111110f;
tmp_na[3 * vn_count + 2] = 1.111110f;
vn_count++;
break;
case 6:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.000000f;
tmp_na[3 * vn_count + 1] = 0.200000f;
tmp_na[3 * vn_count + 2] = 1.200000f;
vn_count++;
break;
case 7:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.111110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 1.311110f;
vn_count++;
break;
case 8:
break;
case 9:
break;
case 10:
break;
case 11:
break;
case 12:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.200000f;
tmp_na[3 * vn_count + 1] = 0.000000f;
tmp_na[3 * vn_count + 2] = 1.200000f;
vn_count++;
break;
case 13:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.111110f;
tmp_na[3 * vn_count + 2] = 1.311110f;
vn_count++;
break;
case 14:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.200000f;
tmp_na[3 * vn_count + 1] = 0.200000f;
tmp_na[3 * vn_count + 2] = 1.400000f;
vn_count++;
break;
case 15:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 1.511110f;
vn_count++;
break;
case 16:
break;
case 17:
break;
case 18:
break;
case 19:
break;
case 20:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.111110f;
tmp_na[3 * vn_count + 1] = 0.111110f;
tmp_na[3 * vn_count + 2] = 0.888890f;
vn_count++;
break;
case 21:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.222220f;
tmp_na[3 * vn_count + 1] = 0.222220f;
tmp_na[3 * vn_count + 2] = 1.000000f;
vn_count++;
break;
case 22:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.111110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 1.088890f;
vn_count++;
break;
case 23:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.222220f;
tmp_na[3 * vn_count + 1] = 0.422220f;
tmp_na[3 * vn_count + 2] = 1.200000f;
vn_count++;
break;
case 24:
break;
case 25:
break;
case 26:
break;
case 27:
break;
case 28:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.111110f;
tmp_na[3 * vn_count + 2] = 1.088890f;
vn_count++;
break;
case 29:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.422220f;
tmp_na[3 * vn_count + 1] = 0.222220f;
tmp_na[3 * vn_count + 2] = 1.200000f;
vn_count++;
break;
case 30:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 1.288890f;
vn_count++;
break;
case 31:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.422220f;
tmp_na[3 * vn_count + 1] = 0.422220f;
tmp_na[3 * vn_count + 2] = 1.400000f;
vn_count++;
break;
case 32:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.000000f;
tmp_na[3 * vn_count + 1] = 1.000000f;
tmp_na[3 * vn_count + 2] = 0.000000f;
vn_count++;
break;
case 33:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.111110f;
tmp_na[3 * vn_count + 1] = 1.111110f;
tmp_na[3 * vn_count + 2] = 0.111110f;
vn_count++;
break;
case 34:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.000000f;
tmp_na[3 * vn_count + 1] = 1.200000f;
tmp_na[3 * vn_count + 2] = 0.200000f;
vn_count++;
break;
case 35:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.111110f;
tmp_na[3 * vn_count + 1] = 1.311110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 36:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.000000f;
tmp_na[3 * vn_count + 1] = 0.200000f;
tmp_na[3 * vn_count + 2] = 0.800000f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.000000f;
tmp_na[3 * vn_count + 1] = 0.800000f;
tmp_na[3 * vn_count + 2] = 0.200000f;
vn_count++;
break;
case 37:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.111110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.911110f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.111110f;
tmp_na[3 * vn_count + 1] = 0.911110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 38:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.000000f;
tmp_na[3 * vn_count + 1] = 0.400000f;
tmp_na[3 * vn_count + 2] = 1.000000f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.000000f;
tmp_na[3 * vn_count + 1] = 1.000000f;
tmp_na[3 * vn_count + 2] = 0.400000f;
vn_count++;
break;
case 39:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.111110f;
tmp_na[3 * vn_count + 1] = 0.511110f;
tmp_na[3 * vn_count + 2] = 1.111110f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.111110f;
tmp_na[3 * vn_count + 1] = 1.111110f;
tmp_na[3 * vn_count + 2] = 0.511110f;
vn_count++;
break;
case 40:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.111110f;
tmp_na[3 * vn_count + 1] = 0.888890f;
tmp_na[3 * vn_count + 2] = 0.111110f;
vn_count++;
break;
case 41:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.222220f;
tmp_na[3 * vn_count + 1] = 1.000000f;
tmp_na[3 * vn_count + 2] = 0.222220f;
vn_count++;
break;
case 42:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.111110f;
tmp_na[3 * vn_count + 1] = 1.088890f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 43:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.222220f;
tmp_na[3 * vn_count + 1] = 1.200000f;
tmp_na[3 * vn_count + 2] = 0.422220f;
vn_count++;
break;
case 44:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.200000f;
tmp_na[3 * vn_count + 1] = 0.200000f;
tmp_na[3 * vn_count + 2] = 1.000000f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.111110f;
tmp_na[3 * vn_count + 1] = 0.688890f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 45:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 1.111110f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.222220f;
tmp_na[3 * vn_count + 1] = 0.800000f;
tmp_na[3 * vn_count + 2] = 0.422220f;
vn_count++;
break;
case 46:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.200000f;
tmp_na[3 * vn_count + 1] = 0.400000f;
tmp_na[3 * vn_count + 2] = 1.200000f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.111110f;
tmp_na[3 * vn_count + 1] = 0.888890f;
tmp_na[3 * vn_count + 2] = 0.511110f;
vn_count++;
break;
case 47:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.511110f;
tmp_na[3 * vn_count + 2] = 1.311110f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.222220f;
tmp_na[3 * vn_count + 1] = 1.000000f;
tmp_na[3 * vn_count + 2] = 0.622220f;
vn_count++;
break;
case 48:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.200000f;
tmp_na[3 * vn_count + 1] = 1.200000f;
tmp_na[3 * vn_count + 2] = 0.000000f;
vn_count++;
break;
case 49:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 1.311110f;
tmp_na[3 * vn_count + 2] = 0.111110f;
vn_count++;
break;
case 50:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.200000f;
tmp_na[3 * vn_count + 1] = 1.400000f;
tmp_na[3 * vn_count + 2] = 0.200000f;
vn_count++;
break;
case 51:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 1.511110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 52:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.111110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.688890f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.200000f;
tmp_na[3 * vn_count + 1] = 1.000000f;
tmp_na[3 * vn_count + 2] = 0.200000f;
vn_count++;
break;
case 53:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.222220f;
tmp_na[3 * vn_count + 1] = 0.422220f;
tmp_na[3 * vn_count + 2] = 0.800000f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 1.111110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 54:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.111110f;
tmp_na[3 * vn_count + 1] = 0.511110f;
tmp_na[3 * vn_count + 2] = 0.888890f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.200000f;
tmp_na[3 * vn_count + 1] = 1.200000f;
tmp_na[3 * vn_count + 2] = 0.400000f;
vn_count++;
break;
case 55:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.222220f;
tmp_na[3 * vn_count + 1] = 0.622220f;
tmp_na[3 * vn_count + 2] = 1.000000f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 1.311110f;
tmp_na[3 * vn_count + 2] = 0.511110f;
vn_count++;
break;
case 56:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 1.088890f;
tmp_na[3 * vn_count + 2] = 0.111110f;
vn_count++;
break;
case 57:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.422220f;
tmp_na[3 * vn_count + 1] = 1.200000f;
tmp_na[3 * vn_count + 2] = 0.222220f;
vn_count++;
break;
case 58:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 1.288890f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 59:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.422220f;
tmp_na[3 * vn_count + 1] = 1.400000f;
tmp_na[3 * vn_count + 2] = 0.422220f;
vn_count++;
break;
case 60:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.888890f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.888890f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 61:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.422220f;
tmp_na[3 * vn_count + 1] = 0.422220f;
tmp_na[3 * vn_count + 2] = 1.000000f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.422220f;
tmp_na[3 * vn_count + 1] = 1.000000f;
tmp_na[3 * vn_count + 2] = 0.422220f;
vn_count++;
break;
case 62:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.511110f;
tmp_na[3 * vn_count + 2] = 1.088890f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 1.088890f;
tmp_na[3 * vn_count + 2] = 0.511110f;
vn_count++;
break;
case 63:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.422220f;
tmp_na[3 * vn_count + 1] = 0.622220f;
tmp_na[3 * vn_count + 2] = 1.200000f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.422220f;
tmp_na[3 * vn_count + 1] = 1.200000f;
tmp_na[3 * vn_count + 2] = 0.622220f;
vn_count++;
break;
case 64:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.000000f;
tmp_na[3 * vn_count + 1] = 0.000000f;
tmp_na[3 * vn_count + 2] = -1.000000f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.000000f;
tmp_na[3 * vn_count + 1] = -1.000000f;
tmp_na[3 * vn_count + 2] = 0.000000f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.000000f;
tmp_na[3 * vn_count + 1] = 0.000000f;
tmp_na[3 * vn_count + 2] = 0.000000f;
vn_count++;
break;
case 65:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.111110f;
tmp_na[3 * vn_count + 1] = 0.111110f;
tmp_na[3 * vn_count + 2] = -0.888890f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.111110f;
tmp_na[3 * vn_count + 1] = -0.888890f;
tmp_na[3 * vn_count + 2] = 0.111110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -0.888890f;
tmp_na[3 * vn_count + 1] = 0.111110f;
tmp_na[3 * vn_count + 2] = 0.111110f;
vn_count++;
break;
case 66:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.000000f;
tmp_na[3 * vn_count + 1] = 0.200000f;
tmp_na[3 * vn_count + 2] = -0.800000f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.000000f;
tmp_na[3 * vn_count + 1] = -0.800000f;
tmp_na[3 * vn_count + 2] = 0.200000f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.111110f;
tmp_na[3 * vn_count + 1] = 0.111110f;
tmp_na[3 * vn_count + 2] = 0.111110f;
vn_count++;
break;
case 67:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.111110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = -0.688890f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.111110f;
tmp_na[3 * vn_count + 1] = -0.688890f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.000000f;
tmp_na[3 * vn_count + 1] = 0.222220f;
tmp_na[3 * vn_count + 2] = 0.222220f;
vn_count++;
break;
case 68:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.000000f;
tmp_na[3 * vn_count + 1] = -1.200000f;
tmp_na[3 * vn_count + 2] = 0.200000f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.200000f;
tmp_na[3 * vn_count + 1] = 0.000000f;
tmp_na[3 * vn_count + 2] = 0.200000f;
vn_count++;
break;
case 69:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.111110f;
tmp_na[3 * vn_count + 1] = -1.088890f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.088890f;
tmp_na[3 * vn_count + 1] = 0.111110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 70:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.000000f;
tmp_na[3 * vn_count + 1] = -1.000000f;
tmp_na[3 * vn_count + 2] = 0.400000f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.311110f;
tmp_na[3 * vn_count + 1] = 0.111110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 71:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.111110f;
tmp_na[3 * vn_count + 1] = -0.888890f;
tmp_na[3 * vn_count + 2] = 0.511110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.200000f;
tmp_na[3 * vn_count + 1] = 0.222220f;
tmp_na[3 * vn_count + 2] = 0.422220f;
vn_count++;
break;
case 72:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.200000f;
tmp_na[3 * vn_count + 1] = 0.000000f;
tmp_na[3 * vn_count + 2] = -0.800000f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.111110f;
tmp_na[3 * vn_count + 1] = -1.111110f;
tmp_na[3 * vn_count + 2] = 0.111110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -0.800000f;
tmp_na[3 * vn_count + 1] = 0.000000f;
tmp_na[3 * vn_count + 2] = 0.200000f;
vn_count++;
break;
case 73:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.111110f;
tmp_na[3 * vn_count + 2] = -0.688890f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.222220f;
tmp_na[3 * vn_count + 1] = -1.000000f;
tmp_na[3 * vn_count + 2] = 0.222220f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -0.688890f;
tmp_na[3 * vn_count + 1] = 0.111110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 74:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.200000f;
tmp_na[3 * vn_count + 1] = 0.200000f;
tmp_na[3 * vn_count + 2] = -0.600000f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.111110f;
tmp_na[3 * vn_count + 1] = -0.911110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -0.911110f;
tmp_na[3 * vn_count + 1] = 0.111110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 75:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = -0.488890f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.222220f;
tmp_na[3 * vn_count + 1] = -0.800000f;
tmp_na[3 * vn_count + 2] = 0.422220f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -0.800000f;
tmp_na[3 * vn_count + 1] = 0.222220f;
tmp_na[3 * vn_count + 2] = 0.422220f;
vn_count++;
break;
case 76:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.111110f;
tmp_na[3 * vn_count + 1] = -1.311110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.000000f;
tmp_na[3 * vn_count + 1] = 0.000000f;
tmp_na[3 * vn_count + 2] = 0.400000f;
vn_count++;
break;
case 77:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.222220f;
tmp_na[3 * vn_count + 1] = -1.200000f;
tmp_na[3 * vn_count + 2] = 0.422220f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -0.888890f;
tmp_na[3 * vn_count + 1] = 0.111110f;
tmp_na[3 * vn_count + 2] = 0.511110f;
vn_count++;
break;
case 78:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.111110f;
tmp_na[3 * vn_count + 1] = -1.111110f;
tmp_na[3 * vn_count + 2] = 0.511110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.111110f;
tmp_na[3 * vn_count + 1] = 0.111110f;
tmp_na[3 * vn_count + 2] = 0.511110f;
vn_count++;
break;
case 79:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.222220f;
tmp_na[3 * vn_count + 1] = -1.000000f;
tmp_na[3 * vn_count + 2] = 0.622220f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.000000f;
tmp_na[3 * vn_count + 1] = 0.222220f;
tmp_na[3 * vn_count + 2] = 0.622220f;
vn_count++;
break;
case 80:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.111110f;
tmp_na[3 * vn_count + 1] = 0.111110f;
tmp_na[3 * vn_count + 2] = -1.111110f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.200000f;
tmp_na[3 * vn_count + 1] = -0.800000f;
tmp_na[3 * vn_count + 2] = 0.000000f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -0.800000f;
tmp_na[3 * vn_count + 1] = 0.200000f;
tmp_na[3 * vn_count + 2] = 0.000000f;
vn_count++;
break;
case 81:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.222220f;
tmp_na[3 * vn_count + 1] = 0.222220f;
tmp_na[3 * vn_count + 2] = -1.000000f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = -0.688890f;
tmp_na[3 * vn_count + 2] = 0.111110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -0.688890f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.111110f;
vn_count++;
break;
case 82:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.111110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = -0.911110f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.200000f;
tmp_na[3 * vn_count + 1] = -0.600000f;
tmp_na[3 * vn_count + 2] = 0.200000f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -0.911110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.111110f;
vn_count++;
break;
case 83:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.222220f;
tmp_na[3 * vn_count + 1] = 0.422220f;
tmp_na[3 * vn_count + 2] = -0.800000f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = -0.488890f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -0.800000f;
tmp_na[3 * vn_count + 1] = 0.422220f;
tmp_na[3 * vn_count + 2] = 0.222220f;
vn_count++;
break;
case 84:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.200000f;
tmp_na[3 * vn_count + 1] = -1.000000f;
tmp_na[3 * vn_count + 2] = 0.200000f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.000000f;
tmp_na[3 * vn_count + 1] = 0.200000f;
tmp_na[3 * vn_count + 2] = 0.200000f;
vn_count++;
break;
case 85:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = -0.888890f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -0.888890f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 86:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.200000f;
tmp_na[3 * vn_count + 1] = -0.800000f;
tmp_na[3 * vn_count + 2] = 0.400000f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.111110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 87:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = -0.688890f;
tmp_na[3 * vn_count + 2] = 0.511110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.000000f;
tmp_na[3 * vn_count + 1] = 0.422220f;
tmp_na[3 * vn_count + 2] = 0.422220f;
vn_count++;
break;
case 88:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.111110f;
tmp_na[3 * vn_count + 2] = -0.911110f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = -0.911110f;
tmp_na[3 * vn_count + 2] = 0.111110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -0.600000f;
tmp_na[3 * vn_count + 1] = 0.200000f;
tmp_na[3 * vn_count + 2] = 0.200000f;
vn_count++;
break;
case 89:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.422220f;
tmp_na[3 * vn_count + 1] = 0.222220f;
tmp_na[3 * vn_count + 2] = -0.800000f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.422220f;
tmp_na[3 * vn_count + 1] = -0.800000f;
tmp_na[3 * vn_count + 2] = 0.222220f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -0.488890f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 90:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = -0.711110f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = -0.711110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -0.711110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 91:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.422220f;
tmp_na[3 * vn_count + 1] = 0.422220f;
tmp_na[3 * vn_count + 2] = -0.600000f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.422220f;
tmp_na[3 * vn_count + 1] = -0.600000f;
tmp_na[3 * vn_count + 2] = 0.422220f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -0.600000f;
tmp_na[3 * vn_count + 1] = 0.422220f;
tmp_na[3 * vn_count + 2] = 0.422220f;
vn_count++;
break;
case 92:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = -1.111110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -0.800000f;
tmp_na[3 * vn_count + 1] = 0.200000f;
tmp_na[3 * vn_count + 2] = 0.400000f;
vn_count++;
break;
case 93:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.422220f;
tmp_na[3 * vn_count + 1] = -1.000000f;
tmp_na[3 * vn_count + 2] = 0.422220f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -0.688890f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.511110f;
vn_count++;
break;
case 94:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = -0.911110f;
tmp_na[3 * vn_count + 2] = 0.511110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -0.911110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.511110f;
vn_count++;
break;
case 95:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.422220f;
tmp_na[3 * vn_count + 1] = -0.800000f;
tmp_na[3 * vn_count + 2] = 0.622220f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -0.800000f;
tmp_na[3 * vn_count + 1] = 0.422220f;
tmp_na[3 * vn_count + 2] = 0.622220f;
vn_count++;
break;
case 96:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.000000f;
tmp_na[3 * vn_count + 1] = 0.200000f;
tmp_na[3 * vn_count + 2] = -1.200000f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.200000f;
tmp_na[3 * vn_count + 1] = 0.200000f;
tmp_na[3 * vn_count + 2] = 0.000000f;
vn_count++;
break;
case 97:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.111110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = -1.088890f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.088890f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.111110f;
vn_count++;
break;
case 98:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.000000f;
tmp_na[3 * vn_count + 1] = 0.400000f;
tmp_na[3 * vn_count + 2] = -1.000000f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.311110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.111110f;
vn_count++;
break;
case 99:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.111110f;
tmp_na[3 * vn_count + 1] = 0.511110f;
tmp_na[3 * vn_count + 2] = -0.888890f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.200000f;
tmp_na[3 * vn_count + 1] = 0.422220f;
tmp_na[3 * vn_count + 2] = 0.222220f;
vn_count++;
break;
case 100:
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.400000f;
tmp_na[3 * vn_count + 1] = 0.200000f;
tmp_na[3 * vn_count + 2] = 0.200000f;
vn_count++;
break;
case 101:
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.288890f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 102:
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.511110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 103:
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.400000f;
tmp_na[3 * vn_count + 1] = 0.422220f;
tmp_na[3 * vn_count + 2] = 0.422220f;
vn_count++;
break;
case 104:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.200000f;
tmp_na[3 * vn_count + 1] = 0.200000f;
tmp_na[3 * vn_count + 2] = -1.000000f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.000000f;
tmp_na[3 * vn_count + 1] = 0.200000f;
tmp_na[3 * vn_count + 2] = 0.200000f;
vn_count++;
break;
case 105:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = -0.888890f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -0.888890f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 106:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.200000f;
tmp_na[3 * vn_count + 1] = 0.400000f;
tmp_na[3 * vn_count + 2] = -0.800000f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.111110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 107:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.511110f;
tmp_na[3 * vn_count + 2] = -0.688890f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.000000f;
tmp_na[3 * vn_count + 1] = 0.422220f;
tmp_na[3 * vn_count + 2] = 0.422220f;
vn_count++;
break;
case 108:
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.200000f;
tmp_na[3 * vn_count + 1] = 0.200000f;
tmp_na[3 * vn_count + 2] = 0.400000f;
vn_count++;
break;
case 109:
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.088890f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.511110f;
vn_count++;
break;
case 110:
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.311110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.511110f;
vn_count++;
break;
case 111:
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.200000f;
tmp_na[3 * vn_count + 1] = 0.422220f;
tmp_na[3 * vn_count + 2] = 0.622220f;
vn_count++;
break;
case 112:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.111110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = -1.311110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.000000f;
tmp_na[3 * vn_count + 1] = 0.400000f;
tmp_na[3 * vn_count + 2] = 0.000000f;
vn_count++;
break;
case 113:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.222220f;
tmp_na[3 * vn_count + 1] = 0.422220f;
tmp_na[3 * vn_count + 2] = -1.200000f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -0.888890f;
tmp_na[3 * vn_count + 1] = 0.511110f;
tmp_na[3 * vn_count + 2] = 0.111110f;
vn_count++;
break;
case 114:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.111110f;
tmp_na[3 * vn_count + 1] = 0.511110f;
tmp_na[3 * vn_count + 2] = -1.111110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.111110f;
tmp_na[3 * vn_count + 1] = 0.511110f;
tmp_na[3 * vn_count + 2] = 0.111110f;
vn_count++;
break;
case 115:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.222220f;
tmp_na[3 * vn_count + 1] = 0.622220f;
tmp_na[3 * vn_count + 2] = -1.000000f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.000000f;
tmp_na[3 * vn_count + 1] = 0.622220f;
tmp_na[3 * vn_count + 2] = 0.222220f;
vn_count++;
break;
case 116:
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.200000f;
tmp_na[3 * vn_count + 1] = 0.400000f;
tmp_na[3 * vn_count + 2] = 0.200000f;
vn_count++;
break;
case 117:
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.088890f;
tmp_na[3 * vn_count + 1] = 0.511110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 118:
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.311110f;
tmp_na[3 * vn_count + 1] = 0.511110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 119:
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.200000f;
tmp_na[3 * vn_count + 1] = 0.622220f;
tmp_na[3 * vn_count + 2] = 0.422220f;
vn_count++;
break;
case 120:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = -1.111110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -0.800000f;
tmp_na[3 * vn_count + 1] = 0.400000f;
tmp_na[3 * vn_count + 2] = 0.200000f;
vn_count++;
break;
case 121:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.422220f;
tmp_na[3 * vn_count + 1] = 0.422220f;
tmp_na[3 * vn_count + 2] = -1.000000f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -0.688890f;
tmp_na[3 * vn_count + 1] = 0.511110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 122:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.511110f;
tmp_na[3 * vn_count + 2] = -0.911110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -0.911110f;
tmp_na[3 * vn_count + 1] = 0.511110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 123:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.422220f;
tmp_na[3 * vn_count + 1] = 0.622220f;
tmp_na[3 * vn_count + 2] = -0.800000f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -0.800000f;
tmp_na[3 * vn_count + 1] = 0.622220f;
tmp_na[3 * vn_count + 2] = 0.422220f;
vn_count++;
break;
case 124:
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.000000f;
tmp_na[3 * vn_count + 1] = 0.400000f;
tmp_na[3 * vn_count + 2] = 0.400000f;
vn_count++;
break;
case 125:
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -0.888890f;
tmp_na[3 * vn_count + 1] = 0.511110f;
tmp_na[3 * vn_count + 2] = 0.511110f;
vn_count++;
break;
case 126:
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.111110f;
tmp_na[3 * vn_count + 1] = 0.511110f;
tmp_na[3 * vn_count + 2] = 0.511110f;
vn_count++;
break;
case 127:
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = -1.000000f;
tmp_na[3 * vn_count + 1] = 0.622220f;
tmp_na[3 * vn_count + 2] = 0.622220f;
vn_count++;
break;
case 128:
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.000000f;
tmp_na[3 * vn_count + 1] = 0.000000f;
tmp_na[3 * vn_count + 2] = 0.000000f;
vn_count++;
break;
case 129:
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.111110f;
tmp_na[3 * vn_count + 1] = 0.111110f;
tmp_na[3 * vn_count + 2] = 0.111110f;
vn_count++;
break;
case 130:
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.888890f;
tmp_na[3 * vn_count + 1] = 0.111110f;
tmp_na[3 * vn_count + 2] = 0.111110f;
vn_count++;
break;
case 131:
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.000000f;
tmp_na[3 * vn_count + 1] = 0.222220f;
tmp_na[3 * vn_count + 2] = 0.222220f;
vn_count++;
break;
case 132:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.200000f;
tmp_na[3 * vn_count + 1] = 0.000000f;
tmp_na[3 * vn_count + 2] = 0.800000f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.800000f;
tmp_na[3 * vn_count + 1] = 0.000000f;
tmp_na[3 * vn_count + 2] = 0.200000f;
vn_count++;
break;
case 133:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.111110f;
tmp_na[3 * vn_count + 2] = 0.911110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.911110f;
tmp_na[3 * vn_count + 1] = 0.111110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 134:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.200000f;
tmp_na[3 * vn_count + 1] = 0.200000f;
tmp_na[3 * vn_count + 2] = 1.000000f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.688890f;
tmp_na[3 * vn_count + 1] = 0.111110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 135:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 1.111110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.800000f;
tmp_na[3 * vn_count + 1] = 0.222220f;
tmp_na[3 * vn_count + 2] = 0.422220f;
vn_count++;
break;
case 136:
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.200000f;
tmp_na[3 * vn_count + 1] = 0.000000f;
tmp_na[3 * vn_count + 2] = 0.200000f;
vn_count++;
break;
case 137:
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.311110f;
tmp_na[3 * vn_count + 1] = 0.111110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 138:
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.088890f;
tmp_na[3 * vn_count + 1] = 0.111110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 139:
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.200000f;
tmp_na[3 * vn_count + 1] = 0.222220f;
tmp_na[3 * vn_count + 2] = 0.422220f;
vn_count++;
break;
case 140:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.400000f;
tmp_na[3 * vn_count + 1] = 0.000000f;
tmp_na[3 * vn_count + 2] = 1.000000f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.000000f;
tmp_na[3 * vn_count + 1] = 0.000000f;
tmp_na[3 * vn_count + 2] = 0.400000f;
vn_count++;
break;
case 141:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.511110f;
tmp_na[3 * vn_count + 1] = 0.111110f;
tmp_na[3 * vn_count + 2] = 1.111110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.111110f;
tmp_na[3 * vn_count + 1] = 0.111110f;
tmp_na[3 * vn_count + 2] = 0.511110f;
vn_count++;
break;
case 142:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.400000f;
tmp_na[3 * vn_count + 1] = 0.200000f;
tmp_na[3 * vn_count + 2] = 1.200000f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.888890f;
tmp_na[3 * vn_count + 1] = 0.111110f;
tmp_na[3 * vn_count + 2] = 0.511110f;
vn_count++;
break;
case 143:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.511110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 1.311110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.000000f;
tmp_na[3 * vn_count + 1] = 0.222220f;
tmp_na[3 * vn_count + 2] = 0.622220f;
vn_count++;
break;
case 144:
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.200000f;
tmp_na[3 * vn_count + 1] = 0.200000f;
tmp_na[3 * vn_count + 2] = 0.000000f;
vn_count++;
break;
case 145:
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.311110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.111110f;
vn_count++;
break;
case 146:
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.088890f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.111110f;
vn_count++;
break;
case 147:
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.200000f;
tmp_na[3 * vn_count + 1] = 0.422220f;
tmp_na[3 * vn_count + 2] = 0.222220f;
vn_count++;
break;
case 148:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.111110f;
tmp_na[3 * vn_count + 2] = 0.688890f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.000000f;
tmp_na[3 * vn_count + 1] = 0.200000f;
tmp_na[3 * vn_count + 2] = 0.200000f;
vn_count++;
break;
case 149:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.422220f;
tmp_na[3 * vn_count + 1] = 0.222220f;
tmp_na[3 * vn_count + 2] = 0.800000f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.111110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 150:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.888890f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.888890f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 151:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.422220f;
tmp_na[3 * vn_count + 1] = 0.422220f;
tmp_na[3 * vn_count + 2] = 1.000000f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.000000f;
tmp_na[3 * vn_count + 1] = 0.422220f;
tmp_na[3 * vn_count + 2] = 0.422220f;
vn_count++;
break;
case 152:
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.400000f;
tmp_na[3 * vn_count + 1] = 0.200000f;
tmp_na[3 * vn_count + 2] = 0.200000f;
vn_count++;
break;
case 153:
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.511110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 154:
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.288890f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 155:
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.400000f;
tmp_na[3 * vn_count + 1] = 0.422220f;
tmp_na[3 * vn_count + 2] = 0.422220f;
vn_count++;
break;
case 156:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.511110f;
tmp_na[3 * vn_count + 1] = 0.111110f;
tmp_na[3 * vn_count + 2] = 0.888890f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.200000f;
tmp_na[3 * vn_count + 1] = 0.200000f;
tmp_na[3 * vn_count + 2] = 0.400000f;
vn_count++;
break;
case 157:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.622220f;
tmp_na[3 * vn_count + 1] = 0.222220f;
tmp_na[3 * vn_count + 2] = 1.000000f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.311110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.511110f;
vn_count++;
break;
case 158:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.511110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 1.088890f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.088890f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.511110f;
vn_count++;
break;
case 159:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.622220f;
tmp_na[3 * vn_count + 1] = 0.422220f;
tmp_na[3 * vn_count + 2] = 1.200000f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.200000f;
tmp_na[3 * vn_count + 1] = 0.422220f;
tmp_na[3 * vn_count + 2] = 0.622220f;
vn_count++;
break;
case 160:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.200000f;
tmp_na[3 * vn_count + 1] = 0.800000f;
tmp_na[3 * vn_count + 2] = 0.000000f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.800000f;
tmp_na[3 * vn_count + 1] = 0.200000f;
tmp_na[3 * vn_count + 2] = 0.000000f;
vn_count++;
break;
case 161:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.911110f;
tmp_na[3 * vn_count + 2] = 0.111110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.911110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.111110f;
vn_count++;
break;
case 162:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.200000f;
tmp_na[3 * vn_count + 1] = 1.000000f;
tmp_na[3 * vn_count + 2] = 0.200000f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.688890f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.111110f;
vn_count++;
break;
case 163:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 1.111110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.800000f;
tmp_na[3 * vn_count + 1] = 0.422220f;
tmp_na[3 * vn_count + 2] = 0.222220f;
vn_count++;
break;
case 164:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.200000f;
tmp_na[3 * vn_count + 1] = 0.200000f;
tmp_na[3 * vn_count + 2] = 0.600000f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.200000f;
tmp_na[3 * vn_count + 1] = 0.600000f;
tmp_na[3 * vn_count + 2] = 0.200000f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.600000f;
tmp_na[3 * vn_count + 1] = 0.200000f;
tmp_na[3 * vn_count + 2] = 0.200000f;
vn_count++;
break;
case 165:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.711110f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.711110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.711110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 166:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.200000f;
tmp_na[3 * vn_count + 1] = 0.400000f;
tmp_na[3 * vn_count + 2] = 0.800000f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.200000f;
tmp_na[3 * vn_count + 1] = 0.800000f;
tmp_na[3 * vn_count + 2] = 0.400000f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.488890f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 167:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.511110f;
tmp_na[3 * vn_count + 2] = 0.911110f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.911110f;
tmp_na[3 * vn_count + 2] = 0.511110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.600000f;
tmp_na[3 * vn_count + 1] = 0.422220f;
tmp_na[3 * vn_count + 2] = 0.422220f;
vn_count++;
break;
case 168:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.688890f;
tmp_na[3 * vn_count + 2] = 0.111110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.000000f;
tmp_na[3 * vn_count + 1] = 0.200000f;
tmp_na[3 * vn_count + 2] = 0.200000f;
vn_count++;
break;
case 169:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.422220f;
tmp_na[3 * vn_count + 1] = 0.800000f;
tmp_na[3 * vn_count + 2] = 0.222220f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.111110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 170:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.888890f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.888890f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 171:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.422220f;
tmp_na[3 * vn_count + 1] = 1.000000f;
tmp_na[3 * vn_count + 2] = 0.422220f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.000000f;
tmp_na[3 * vn_count + 1] = 0.422220f;
tmp_na[3 * vn_count + 2] = 0.422220f;
vn_count++;
break;
case 172:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.400000f;
tmp_na[3 * vn_count + 1] = 0.200000f;
tmp_na[3 * vn_count + 2] = 0.800000f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.488890f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.800000f;
tmp_na[3 * vn_count + 1] = 0.200000f;
tmp_na[3 * vn_count + 2] = 0.400000f;
vn_count++;
break;
case 173:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.511110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.911110f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.422220f;
tmp_na[3 * vn_count + 1] = 0.600000f;
tmp_na[3 * vn_count + 2] = 0.422220f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.911110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.511110f;
vn_count++;
break;
case 174:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.400000f;
tmp_na[3 * vn_count + 1] = 0.400000f;
tmp_na[3 * vn_count + 2] = 1.000000f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.688890f;
tmp_na[3 * vn_count + 2] = 0.511110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.688890f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.511110f;
vn_count++;
break;
case 175:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.511110f;
tmp_na[3 * vn_count + 1] = 0.511110f;
tmp_na[3 * vn_count + 2] = 1.111110f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.422220f;
tmp_na[3 * vn_count + 1] = 0.800000f;
tmp_na[3 * vn_count + 2] = 0.622220f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.800000f;
tmp_na[3 * vn_count + 1] = 0.422220f;
tmp_na[3 * vn_count + 2] = 0.622220f;
vn_count++;
break;
case 176:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.400000f;
tmp_na[3 * vn_count + 1] = 1.000000f;
tmp_na[3 * vn_count + 2] = 0.000000f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.000000f;
tmp_na[3 * vn_count + 1] = 0.400000f;
tmp_na[3 * vn_count + 2] = 0.000000f;
vn_count++;
break;
case 177:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.511110f;
tmp_na[3 * vn_count + 1] = 1.111110f;
tmp_na[3 * vn_count + 2] = 0.111110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.111110f;
tmp_na[3 * vn_count + 1] = 0.511110f;
tmp_na[3 * vn_count + 2] = 0.111110f;
vn_count++;
break;
case 178:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.400000f;
tmp_na[3 * vn_count + 1] = 1.200000f;
tmp_na[3 * vn_count + 2] = 0.200000f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.888890f;
tmp_na[3 * vn_count + 1] = 0.511110f;
tmp_na[3 * vn_count + 2] = 0.111110f;
vn_count++;
break;
case 179:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.511110f;
tmp_na[3 * vn_count + 1] = 1.311110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.000000f;
tmp_na[3 * vn_count + 1] = 0.622220f;
tmp_na[3 * vn_count + 2] = 0.222220f;
vn_count++;
break;
case 180:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.488890f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.400000f;
tmp_na[3 * vn_count + 1] = 0.800000f;
tmp_na[3 * vn_count + 2] = 0.200000f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.800000f;
tmp_na[3 * vn_count + 1] = 0.400000f;
tmp_na[3 * vn_count + 2] = 0.200000f;
vn_count++;
break;
case 181:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.422220f;
tmp_na[3 * vn_count + 1] = 0.422220f;
tmp_na[3 * vn_count + 2] = 0.600000f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.511110f;
tmp_na[3 * vn_count + 1] = 0.911110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.911110f;
tmp_na[3 * vn_count + 1] = 0.511110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 182:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.511110f;
tmp_na[3 * vn_count + 2] = 0.688890f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.400000f;
tmp_na[3 * vn_count + 1] = 1.000000f;
tmp_na[3 * vn_count + 2] = 0.400000f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.688890f;
tmp_na[3 * vn_count + 1] = 0.511110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 183:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.422220f;
tmp_na[3 * vn_count + 1] = 0.622220f;
tmp_na[3 * vn_count + 2] = 0.800000f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.511110f;
tmp_na[3 * vn_count + 1] = 1.111110f;
tmp_na[3 * vn_count + 2] = 0.511110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.800000f;
tmp_na[3 * vn_count + 1] = 0.622220f;
tmp_na[3 * vn_count + 2] = 0.422220f;
vn_count++;
break;
case 184:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.511110f;
tmp_na[3 * vn_count + 1] = 0.888890f;
tmp_na[3 * vn_count + 2] = 0.111110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.200000f;
tmp_na[3 * vn_count + 1] = 0.400000f;
tmp_na[3 * vn_count + 2] = 0.200000f;
vn_count++;
break;
case 185:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.622220f;
tmp_na[3 * vn_count + 1] = 1.000000f;
tmp_na[3 * vn_count + 2] = 0.222220f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.311110f;
tmp_na[3 * vn_count + 1] = 0.511110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 186:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.511110f;
tmp_na[3 * vn_count + 1] = 1.088890f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.088890f;
tmp_na[3 * vn_count + 1] = 0.511110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 187:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.622220f;
tmp_na[3 * vn_count + 1] = 1.200000f;
tmp_na[3 * vn_count + 2] = 0.422220f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.200000f;
tmp_na[3 * vn_count + 1] = 0.622220f;
tmp_na[3 * vn_count + 2] = 0.422220f;
vn_count++;
break;
case 188:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.511110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = 0.688890f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.511110f;
tmp_na[3 * vn_count + 1] = 0.688890f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.000000f;
tmp_na[3 * vn_count + 1] = 0.400000f;
tmp_na[3 * vn_count + 2] = 0.400000f;
vn_count++;
break;
case 189:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.622220f;
tmp_na[3 * vn_count + 1] = 0.422220f;
tmp_na[3 * vn_count + 2] = 0.800000f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.622220f;
tmp_na[3 * vn_count + 1] = 0.800000f;
tmp_na[3 * vn_count + 2] = 0.422220f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.111110f;
tmp_na[3 * vn_count + 1] = 0.511110f;
tmp_na[3 * vn_count + 2] = 0.511110f;
vn_count++;
break;
case 190:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.511110f;
tmp_na[3 * vn_count + 1] = 0.511110f;
tmp_na[3 * vn_count + 2] = 0.888890f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.511110f;
tmp_na[3 * vn_count + 1] = 0.888890f;
tmp_na[3 * vn_count + 2] = 0.511110f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.888890f;
tmp_na[3 * vn_count + 1] = 0.511110f;
tmp_na[3 * vn_count + 2] = 0.511110f;
vn_count++;
break;
case 191:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m110]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m110]].count];
tmp_na[3 * vn_count ] = 0.622220f;
tmp_na[3 * vn_count + 1] = 0.622220f;
tmp_na[3 * vn_count + 2] = 1.000000f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m101]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m101]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.622220f;
tmp_na[3 * vn_count + 1] = 1.000000f;
tmp_na[3 * vn_count + 2] = 0.622220f;
vn_count++;
tmp_cl[i].vn_id[pypz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m011]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x() + _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m011]].count];
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 1.000000f;
tmp_na[3 * vn_count + 1] = 0.622220f;
tmp_na[3 * vn_count + 2] = 0.622220f;
vn_count++;
break;
case 192:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.200000f;
tmp_na[3 * vn_count + 1] = 0.000000f;
tmp_na[3 * vn_count + 2] = -1.200000f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.200000f;
tmp_na[3 * vn_count + 1] = -1.200000f;
tmp_na[3 * vn_count + 2] = 0.000000f;
vn_count++;
break;
case 193:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.111110f;
tmp_na[3 * vn_count + 2] = -1.088890f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = -1.088890f;
tmp_na[3 * vn_count + 2] = 0.111110f;
vn_count++;
break;
case 194:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.200000f;
tmp_na[3 * vn_count + 1] = 0.200000f;
tmp_na[3 * vn_count + 2] = -1.000000f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.200000f;
tmp_na[3 * vn_count + 1] = -1.000000f;
tmp_na[3 * vn_count + 2] = 0.200000f;
vn_count++;
break;
case 195:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = -0.888890f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = -0.888890f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 196:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.200000f;
tmp_na[3 * vn_count + 1] = -1.400000f;
tmp_na[3 * vn_count + 2] = 0.200000f;
vn_count++;
break;
case 197:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = -1.288890f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 198:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.200000f;
tmp_na[3 * vn_count + 1] = -1.200000f;
tmp_na[3 * vn_count + 2] = 0.400000f;
vn_count++;
break;
case 199:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = -1.088890f;
tmp_na[3 * vn_count + 2] = 0.511110f;
vn_count++;
break;
case 200:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.400000f;
tmp_na[3 * vn_count + 1] = 0.000000f;
tmp_na[3 * vn_count + 2] = -1.000000f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = -1.311110f;
tmp_na[3 * vn_count + 2] = 0.111110f;
vn_count++;
break;
case 201:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.511110f;
tmp_na[3 * vn_count + 1] = 0.111110f;
tmp_na[3 * vn_count + 2] = -0.888890f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.422220f;
tmp_na[3 * vn_count + 1] = -1.200000f;
tmp_na[3 * vn_count + 2] = 0.222220f;
vn_count++;
break;
case 202:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.400000f;
tmp_na[3 * vn_count + 1] = 0.200000f;
tmp_na[3 * vn_count + 2] = -0.800000f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = -1.111110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 203:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.511110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = -0.688890f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.422220f;
tmp_na[3 * vn_count + 1] = -1.000000f;
tmp_na[3 * vn_count + 2] = 0.422220f;
vn_count++;
break;
case 204:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = -1.511110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 205:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.422220f;
tmp_na[3 * vn_count + 1] = -1.400000f;
tmp_na[3 * vn_count + 2] = 0.422220f;
vn_count++;
break;
case 206:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = -1.311110f;
tmp_na[3 * vn_count + 2] = 0.511110f;
vn_count++;
break;
case 207:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.422220f;
tmp_na[3 * vn_count + 1] = -1.200000f;
tmp_na[3 * vn_count + 2] = 0.622220f;
vn_count++;
break;
case 208:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.111110f;
tmp_na[3 * vn_count + 2] = -1.311110f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.400000f;
tmp_na[3 * vn_count + 1] = -1.000000f;
tmp_na[3 * vn_count + 2] = 0.000000f;
vn_count++;
break;
case 209:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.422220f;
tmp_na[3 * vn_count + 1] = 0.222220f;
tmp_na[3 * vn_count + 2] = -1.200000f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.511110f;
tmp_na[3 * vn_count + 1] = -0.888890f;
tmp_na[3 * vn_count + 2] = 0.111110f;
vn_count++;
break;
case 210:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = -1.111110f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.400000f;
tmp_na[3 * vn_count + 1] = -0.800000f;
tmp_na[3 * vn_count + 2] = 0.200000f;
vn_count++;
break;
case 211:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.422220f;
tmp_na[3 * vn_count + 1] = 0.422220f;
tmp_na[3 * vn_count + 2] = -1.000000f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.511110f;
tmp_na[3 * vn_count + 1] = -0.688890f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 212:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.400000f;
tmp_na[3 * vn_count + 1] = -1.200000f;
tmp_na[3 * vn_count + 2] = 0.200000f;
vn_count++;
break;
case 213:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.511110f;
tmp_na[3 * vn_count + 1] = -1.088890f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 214:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.400000f;
tmp_na[3 * vn_count + 1] = -1.000000f;
tmp_na[3 * vn_count + 2] = 0.400000f;
vn_count++;
break;
case 215:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.511110f;
tmp_na[3 * vn_count + 1] = -0.888890f;
tmp_na[3 * vn_count + 2] = 0.511110f;
vn_count++;
break;
case 216:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.511110f;
tmp_na[3 * vn_count + 1] = 0.111110f;
tmp_na[3 * vn_count + 2] = -1.111110f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.511110f;
tmp_na[3 * vn_count + 1] = -1.111110f;
tmp_na[3 * vn_count + 2] = 0.111110f;
vn_count++;
break;
case 217:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.622220f;
tmp_na[3 * vn_count + 1] = 0.222220f;
tmp_na[3 * vn_count + 2] = -1.000000f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.622220f;
tmp_na[3 * vn_count + 1] = -1.000000f;
tmp_na[3 * vn_count + 2] = 0.222220f;
vn_count++;
break;
case 218:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.511110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = -0.911110f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.511110f;
tmp_na[3 * vn_count + 1] = -0.911110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 219:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.622220f;
tmp_na[3 * vn_count + 1] = 0.422220f;
tmp_na[3 * vn_count + 2] = -0.800000f;
vn_count++;
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.622220f;
tmp_na[3 * vn_count + 1] = -0.800000f;
tmp_na[3 * vn_count + 2] = 0.422220f;
vn_count++;
break;
case 220:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.511110f;
tmp_na[3 * vn_count + 1] = -1.311110f;
tmp_na[3 * vn_count + 2] = 0.311110f;
vn_count++;
break;
case 221:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.622220f;
tmp_na[3 * vn_count + 1] = -1.200000f;
tmp_na[3 * vn_count + 2] = 0.422220f;
vn_count++;
break;
case 222:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.511110f;
tmp_na[3 * vn_count + 1] = -1.111110f;
tmp_na[3 * vn_count + 2] = 0.511110f;
vn_count++;
break;
case 223:
tmp_cl[i].vn_id[pxpz]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_va[3 * vn_count + 2] = relevante_ecke.z();
tmp_na[3 * vn_count ] = 0.622220f;
tmp_na[3 * vn_count + 1] = -1.000000f;
tmp_na[3 * vn_count + 2] = 0.622220f;
vn_count++;
break;
case 224:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.200000f;
tmp_na[3 * vn_count + 1] = 0.200000f;
tmp_na[3 * vn_count + 2] = -1.400000f;
vn_count++;
break;
case 225:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = -1.288890f;
vn_count++;
break;
case 226:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.200000f;
tmp_na[3 * vn_count + 1] = 0.400000f;
tmp_na[3 * vn_count + 2] = -1.200000f;
vn_count++;
break;
case 227:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.511110f;
tmp_na[3 * vn_count + 2] = -1.088890f;
vn_count++;
break;
case 228:
break;
case 229:
break;
case 230:
break;
case 231:
break;
case 232:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.400000f;
tmp_na[3 * vn_count + 1] = 0.200000f;
tmp_na[3 * vn_count + 2] = -1.200000f;
vn_count++;
break;
case 233:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.511110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = -1.088890f;
vn_count++;
break;
case 234:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.400000f;
tmp_na[3 * vn_count + 1] = 0.400000f;
tmp_na[3 * vn_count + 2] = -1.000000f;
vn_count++;
break;
case 235:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.511110f;
tmp_na[3 * vn_count + 1] = 0.511110f;
tmp_na[3 * vn_count + 2] = -0.888890f;
vn_count++;
break;
case 236:
break;
case 237:
break;
case 238:
break;
case 239:
break;
case 240:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = -1.511110f;
vn_count++;
break;
case 241:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.422220f;
tmp_na[3 * vn_count + 1] = 0.422220f;
tmp_na[3 * vn_count + 2] = -1.400000f;
vn_count++;
break;
case 242:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.311110f;
tmp_na[3 * vn_count + 1] = 0.511110f;
tmp_na[3 * vn_count + 2] = -1.311110f;
vn_count++;
break;
case 243:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.422220f;
tmp_na[3 * vn_count + 1] = 0.622220f;
tmp_na[3 * vn_count + 2] = -1.200000f;
vn_count++;
break;
case 244:
break;
case 245:
break;
case 246:
break;
case 247:
break;
case 248:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.511110f;
tmp_na[3 * vn_count + 1] = 0.311110f;
tmp_na[3 * vn_count + 2] = -1.311110f;
vn_count++;
break;
case 249:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.622220f;
tmp_na[3 * vn_count + 1] = 0.422220f;
tmp_na[3 * vn_count + 2] = -1.200000f;
vn_count++;
break;
case 250:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.511110f;
tmp_na[3 * vn_count + 1] = 0.511110f;
tmp_na[3 * vn_count + 2] = -1.111110f;
vn_count++;
break;
case 251:
tmp_cl[i].vn_id[pxpy]=vn_count;
relevante_ecke = tmp_nl[tmp_cl[i].nodelist_id[m111]].coord;
tmp_va[3 * vn_count ] = relevante_ecke.x();
tmp_va[3 * vn_count + 1] = relevante_ecke.y();
tmp_va[3 * vn_count + 2] = relevante_ecke.z() - _cellsize * dichte2size[tmp_nl[tmp_cl[i].nodelist_id[m111]].count];
tmp_na[3 * vn_count ] = 0.622220f;
tmp_na[3 * vn_count + 1] = 0.622220f;
tmp_na[3 * vn_count + 2] = -1.000000f;
vn_count++;
break;
case 252:
break;
case 253:
break;
case 254:
break;
case 255:
break;
}
